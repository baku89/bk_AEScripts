function clamp(val, minVal, maxVal) {	return Math.min(Math.max(val, minVal), maxVal);}function Dialog(params, uid) {			this.params = params;	this.uid = uid;	this.show = function() {		var w = new Window( "dialog", "", [0, 0, 400, 150] );		w.center();		// add property		var x, y;		var ctrl = {};		// window dimentions		var WIDTH = w.size.width;		var MARGIN = 10;		var LABEL_WIDTH = 90;		var UI_RIGHT = WIDTH - MARGIN;		var ROW_HEIGHT = 30;		var ROW_STEP = ROW_HEIGHT + MARGIN;		var BUTTON_WIDTH = 80;		var SUFFIX_WIDTH = 40;		y = MARGIN;		for ( key in params ) {			x = MARGIN;			var param = params[ key ];			var label = param.label !== undefined ? param.label : key;			var value = param.value;			if (uid !== undefined && app.settings.haveSetting(uid, key)) {				value = app.settings.getSetting(uid, key);			}			// add label			w.add( "statictext", [x, y, LABEL_WIDTH, y + ROW_HEIGHT], label );			// add ui			x += LABEL_WIDTH + MARGIN;			if ( param.type == "string" || param.type == "number" ) {				if (param.type == "number" && param.min !== undefined && param.max !== undefined) {					var slider = w.add("slider", [x, y, UI_RIGHT - SUFFIX_WIDTH - MARGIN, y + ROW_HEIGHT]);					slider.value = value;					slider.minvalue = param.min;					slider.maxvalue = param.max;					var editNumber = w.add("edittext", [UI_RIGHT - SUFFIX_WIDTH, y, UI_RIGHT, y + ROW_HEIGHT]);					editNumber.text = value;					slider.onChanging = function() {						editNumber.text = slider.value;					}					editNumber.onChange = function() {						var newVal = clamp(Number(editNumber.text), param.min, param.max);						slider.value = newVal;						editNumber.value = newVal;					}					ctrl[key] = slider;				} else {					ctrl[key] = w.add( "edittext", [x, y, UI_RIGHT, y + ROW_HEIGHT] );					ctrl[key].text = value;				}			} else if ( param.type == "boolean" ) {				ctrl[key] = w.add( "checkbox", [x, y + 10, UI_RIGHT, y + ROW_HEIGHT + 10]);				ctrl[key].value = value;			}			y += ROW_STEP;		}							// add ok / cancel button		x = UI_RIGHT - BUTTON_WIDTH - MARGIN - BUTTON_WIDTH;		var btnOk = w.add("button", [x, y, x + BUTTON_WIDTH, y + ROW_HEIGHT], "OK", { name: "ok" });		x += BUTTON_WIDTH + MARGIN;		var btnCancel = w.add("button", [x, y, x + BUTTON_WIDTH, y + ROW_HEIGHT], "Cancel", { name: "cancel" });		y += ROW_STEP;		w.size.height = y + 10;							// show		if ( w.show() < 2 ) {			var result = {};			for ( key in params ) {				var value = undefined;				if (params[key].type == "number") {					if (ctrl[key].type instanceof EditText) {						value = Number(ctrl[key].text);					} else {						value = ctrl[key].value;					}				} else if ( params[key].type == "string" ) {					value = ctrl[key].text;				} else {					value = ctrl[key].value;				}				result[key] = value;				if (uid !== undefined && value !== undefined) {					app.settings.saveSetting(uid, key, value);				}			}			return result;		} else {			return null;		}	}}function showDialog(params, uid) {	var dialog = new Dialog(params, uid);	return dialog.show();}