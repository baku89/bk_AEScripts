#include "include/util.jsx"var settings;var proxyDir;(function() {        if ( !app.project ) {        alert("Any project is not opened.");        return;    }        if ( (settings = loadSettings()) === null ) {        return;    }    proxyDir = resolveRelativePath(        settings["project_path"],        settings["proxy"]["directory"]    );    // get active compositions    comps = getSelectedComp();        if ( comps === null ) {        alert("No Composition Selected.");        return;    }        for ( var i = 0; i < comps.length; i++ ) {        addQueue( comps[i] );    }        return;})();function addQueue( comp ) {     // delete current proxy if it exists    if ( comp.useProxy ) {                // delete from system command        var proxyPath = comp.proxySource.file.toString();        cmp.setProxyToNone();                var command = "rm " + proxyPath.replace(  "%20", "\\ " );        var stdout = system.callSystem( command );                if ( stdout != "" ) {            alert( stdout );        }    }       // setup queue    var queue = app.project.renderQueue.items.add( comp );    queue.applyTemplate( settings["proxy"]["render_settings"] );        var om = queue.outputModule( 1 );       var template = settings["proxy"]["output_module"];    try {        om.applyTemplate( template );    } catch ( err ) {        alert("Spedified output module template \"" + template + "\" is not valid");    }    om.postRenderAction = PostRenderAction.SET_PROXY;        var destPath = proxyDir + "/" + comp.name + ".mov";    om.file = new File( destPath );}