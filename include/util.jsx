#include "json2.js"// laod settings from JSONfunction loadSettings() {    if ( !app.project.file ) {        alert("No AEP opened");        return null;    }    aepPath = app.project.file.toString();    aepDir = aepPath.match( /^(.*)\// )[1];     settingsPath = aepDir + '/project-settings.json';    settingsFile = File( settingsPath );    if ( settingsFile === false ) { // if it is really there        alert("Cannot open project-settings.json");        return null;    }    try {        settingsFile.open('r');        var content = settingsFile.read();             settings = JSON.parse( content );        settingsFile.close();            } catch ( err ) {        alert("Cannot parse project-settings.json");    }    settings["project_path"] = aepDir;    return settings;}// load all selected compositionfunction getSelectedComp() {      comps = [];        if ( app.project.activeItem !== null ) {        comps.push( app.project.activeItem );        } else {        var items = app.project.selection;        for ( var i = 0; i < items.length; i++ ) {            if ( items[i] instanceof CompItem )                comps.push( items[i] );        }    }    return ( comps.length ) != 0 ? comps : null;}// http://stackoverflow.com/questions/14780350/convert-relative-path-to-absolute-using-javascriptfunction resolveRelativePath(base, relative) {    var stack = base.split("/"),        parts = relative.split("/");for (var i=0; i<parts.length; i++) {        if (parts[i] == ".")            continue;        if (parts[i] == "..")            stack.pop();        else            stack.push(parts[i]);    }    return stack.join("/");}// force verify pathFolder.prototype.verify = function() {	if ( this.exists ) {		return true ;	} else {		var foldersToCreate = new Array () ;		var activeFolder = new Folder ( this.absoluteURI ) ;		while ( ! activeFolder.exists ) {			foldersToCreate.push( activeFolder ) ;			activeFolder = new Folder ( activeFolder.path ) ;		}		while ( foldersToCreate.length > 0 ) {			activeFolder = foldersToCreate.pop() ;			if ( ! activeFolder.create() ) {				return false ;			}		} 	 return true ;	}}