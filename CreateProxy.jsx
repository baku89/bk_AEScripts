#include "bk_include/util.jsx"var settings;var proxyDir;(function main() {        if ( (settings = loadSettings()) === null ) {        return;    }    proxyDir = resolveRelativePath(        settings["project_path"],        settings["proxy"]["directory"]    );    // get active compositions    items = getSelectedComp();        if ( items === null ) {        alert("No Composition Selected!");        return;    }        for ( var i = 0; i < items.length; i++ ) {        addQueue( items[i] );    }        return;})();function addQueue( item ) {     // delete current proxy if it exists    if ( item.useProxy ) {                // delete from system command        var proxyPath = item.proxySource.file.toString();        item.setProxyToNone();                var command = "rm " + proxyPath.replace(  "%20", "\\ " );        var stdout = system.callSystem( command );                if ( stdout != "" ) {            alert( stdout );        }    }       // setup queue    var queue = app.project.renderQueue.items.add( item );    queue.applyTemplate( settings["proxy"]["render_settings"] );        var output = queue.outputModule( 1 );        output.applyTemplate( settings["proxy"]["output_module"] );    output.postRenderAction = PostRenderAction.SET_PROXY;        var destPath = proxyDir + "/" + item.name + ".mov";    output.file = new File( destPath );}